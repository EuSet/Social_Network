{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogitems/Dialogitems.tsx","components/Dialogs/DialogsForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Message","props","className","s","message","Dialogitems","path","id","item","active","to","name","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","placeholder","Dialogs","dialogsElements","dialogsPage","dialogsData","map","d","messagesElements","messagesData","m","dialogsItems","hr","messages","formData","addMessage","mapStateToPropsForRedirect","state","isAuth","authData","compose","connect","Component","restProps"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,GAAK,oBAAoB,SAAW,4B,qFCUrLC,EAJC,SAACC,GACb,OAAO,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,QCO9BC,EAPK,SAACJ,GACjB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OAAO,qBAAKL,UAAWC,IAAEK,KAAO,IAAML,IAAEM,OAAjC,SACH,cAAC,IAAD,CAASC,GAAIJ,EAAb,SAAoBL,EAAMU,U,0BCQrBC,EAAmBC,YAAgC,CAACC,KAAK,WAAtCD,EAX6C,SAACZ,GAC1E,OAAO,uBAAMc,SAAUd,EAAMe,aAAtB,UACH,8BACI,cAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,KAAWC,UAAW,WAAYT,KAAM,UAAWU,YAAa,cAEtF,8BACI,kDCwBGC,EAxBC,SAACrB,GACb,IAIIsB,EAAkBtB,EAAMuB,YAAYC,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAwBhB,KAAMgB,EAAEhB,KAAMJ,GAAIoB,EAAEpB,IAA1BoB,EAAEpB,OAC7EqB,EAAmB3B,EAAMuB,YAAYK,aAAaH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAoBvB,GAAIuB,EAAEvB,GAAIH,QAAS0B,EAAE1B,SAA3B0B,EAAEvB,OAG/E,OAAO,sBAAKL,UAAWC,IAAEmB,QAAlB,UACH,qBAAKpB,UAAWC,IAAE4B,aAAlB,SACKR,IAEL,qBAAKrB,UAAWC,IAAE6B,KAElB,sBAAK9B,UAAWC,IAAE8B,SAAlB,UACKL,EACD,8BACI,cAAChB,EAAD,CAAkBG,SAjBV,SAACmB,GACjBjC,EAAMkC,WAAWD,EAAS9B,qB,+BCP5BgC,EAA6B,SAACC,GAChC,MAAO,CACHC,OAAOD,EAAME,SAASD,S,WCoBfE,sBACXC,aAvBoB,SAACJ,GACrB,MAAO,CACHb,YAAaa,EAAMb,eAqBE,CAACW,kBDjBvB,SAA6BO,GAOhC,OAAOD,YAAQL,EAARK,EANP,SAA2BxC,GAA6B,IAC/CqC,EAAuBrC,EAAvBqC,OAAUK,EADoC,YACvB1C,EADuB,YAEnD,OAAKqC,EACE,cAACI,EAAD,eAAeC,IADF,cAAC,IAAD,CAAUjC,GAAI,gBCa3B8B,CAGblB","file":"static/js/5.96b7f447.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1bK9-\",\"dialogsItems\":\"Dialogs_dialogsItems__2N5q5\",\"item\":\"Dialogs_item__1qf4n\",\"active\":\"Dialogs_active__3Xm4e\",\"hr\":\"Dialogs_hr__2TeZ0\",\"messages\":\"Dialogs_messages__1__Ic\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\ntype PropsType = {\r\n    message:string\r\n    id:number\r\n}\r\nconst Message = (props:PropsType) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    name:string\r\n    id:number\r\n}\r\nconst Dialogitems = (props:PropsType) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.item + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default Dialogitems;","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {required} from \"../Common/Validate\";\r\n\r\nexport type DialogsFormDataType = {\r\n    message:string\r\n}\r\n\r\nexport const DialogsForm: React.FC<InjectedFormProps<DialogsFormDataType>> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field validate={[required]} component={'textarea'} name={'message'} placeholder={'message'}/>\r\n        </div>\r\n        <div>\r\n            <button>send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const DialogsReduxForm = reduxForm<DialogsFormDataType>( {form:'message'} )(DialogsForm)\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport Dialogitems from \"./Dialogitems/Dialogitems\";\r\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\r\nimport {DialogsFormDataType, DialogsReduxForm} from \"./DialogsForm\";\r\n\r\n\r\nexport type PropsType = {\r\n    dialogsPage: DialogsPageType\r\n    addMessage:(newMessage:string) => void\r\n    isAuth:boolean\r\n}\r\n\r\nconst Dialogs = (props: PropsType) => {\r\n    let addNewMessage = (formData:DialogsFormDataType) => {\r\n        props.addMessage(formData.message)\r\n    }\r\n\r\n    let dialogsElements = props.dialogsPage.dialogsData.map(d => <Dialogitems key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = props.dialogsPage.messagesData.map(m => <Message key={m.id} id={m.id} message={m.message}/>);\r\n\r\n    // if(!props.isAuth) return <Redirect to={'/login'}/>\r\n    return <div className={s.Dialogs}>\r\n        <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.hr}>\r\n        </div>\r\n        <div className={s.messages}>\r\n            {messagesElements}\r\n            <div>\r\n                <DialogsReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs;\r\n","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../redux/redux-store\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth:boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state:StateType):mapStateToPropsType => {\r\n    return {\r\n        isAuth:state.authData.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: mapStateToPropsType) {\r\n        let {isAuth,...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import {addMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\n\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n// const mapDispatchToProps = (dispatch: (action:DialogsActionType) => void) => {\r\n//     return {\r\n//         addNewMessage: () => {\r\n//             dispatch(addNewMessage())\r\n//         },\r\n//         onNewMessageChange: (messageBody:string) => {\r\n//             dispatch(onNewMessageChange(messageBody))\r\n//         }\r\n//     }\r\n// }\r\n// const authRedirectComponent = withAuthRedirect(Dialogs)\r\n// const DialogsContainer = connect(mapStateToProps, {\r\n//     addNewMessage, onNewMessageChange\r\n// })(authRedirectComponent)\r\n\r\n// export default DialogsContainer;\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}